<?xml version="1.0" encoding="ASCII"?>
<language:LogicProblem xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore2logicannotations="http://www.bme.hu/mit/inf/dslreasoner/logic/model/language/ecore2logicannotation" xmlns:language="http://www.bme.hu/mit/inf/dslreasoner/logic/model/problem" xmlns:language_1="http://www.bme.hu/mit/inf/dslreasoner/logic/model/language">
  <types xsi:type="language_1:TypeDeclaration" name="Cypher class"/>
  <types xsi:type="language_1:TypeDeclaration" name="AllOptions class" supertypes="//@types.29"/>
  <types xsi:type="language_1:TypeDeclaration" name="SinglePartQuery class" supertypes="//@types.16"/>
  <types xsi:type="language_1:TypeDeclaration" name="Match class" supertypes="//@types.20"/>
  <types xsi:type="language_1:TypeDeclaration" name="Pattern class"/>
  <types xsi:type="language_1:TypeDeclaration" name="PatternElement class" supertypes="//@types.22"/>
  <types xsi:type="language_1:TypeDeclaration" name="NodePattern class" supertypes="//@types.24"/>
  <types xsi:type="language_1:TypeDeclaration" name="VariableDeclaration class"/>
  <types xsi:type="language_1:TypeDeclaration" name="MapLiteral class" supertypes="//@types.25 //@types.26"/>
  <types xsi:type="language_1:TypeDeclaration" name="MapLiteralEntry class"/>
  <types xsi:type="language_1:TypeDeclaration" name="StringLiteral class" supertypes="//@types.26"/>
  <types xsi:type="language_1:TypeDeclaration" name="Return class" supertypes="//@types.21"/>
  <types xsi:type="language_1:TypeDeclaration" name="ReturnBody class"/>
  <types xsi:type="language_1:TypeDeclaration" name="ReturnItems class"/>
  <types xsi:type="language_1:TypeDeclaration" name="ReturnItem class"/>
  <types xsi:type="language_1:TypeDeclaration" name="VariableRef class" supertypes="//@types.27"/>
  <types xsi:type="language_1:TypeDeclaration" name="SingleQuery class" subtypes="//@types.2" supertypes="//@types.17"/>
  <types xsi:type="language_1:TypeDeclaration" name="RegularQuery class" subtypes="//@types.16" supertypes="//@types.18"/>
  <types xsi:type="language_1:TypeDeclaration" name="Query class" subtypes="//@types.17" supertypes="//@types.19"/>
  <types xsi:type="language_1:TypeDeclaration" name="Statement class" subtypes="//@types.18"/>
  <types xsi:type="language_1:TypeDeclaration" name="ReadingClause class" subtypes="//@types.3" supertypes="//@types.21"/>
  <types xsi:type="language_1:TypeDeclaration" name="Clause class" subtypes="//@types.11 //@types.20"/>
  <types xsi:type="language_1:TypeDeclaration" name="AnonymousPatternPart class" subtypes="//@types.5" supertypes="//@types.23"/>
  <types xsi:type="language_1:TypeDeclaration" name="PatternPart class" subtypes="//@types.22"/>
  <types xsi:type="language_1:TypeDeclaration" name="NodeLabels class" subtypes="//@types.6 //@types.27"/>
  <types xsi:type="language_1:TypeDeclaration" name="Properties class" subtypes="//@types.8"/>
  <types xsi:type="language_1:TypeDeclaration" name="Literal class" subtypes="//@types.8 //@types.10" supertypes="//@types.27"/>
  <types xsi:type="language_1:TypeDeclaration" name="Expression class" subtypes="//@types.15 //@types.26" supertypes="//@types.24 //@types.28"/>
  <types xsi:type="language_1:TypeDeclaration" name="PropertyExpression class" subtypes="//@types.27"/>
  <types xsi:type="language_1:TypeDeclaration" name="QueryOptions class" subtypes="//@types.1"/>
  <assertions name="upperMultiplicity variableRef VariableRef" annotations="//@annotations.0">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.15"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.7"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.7"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.0">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.0">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.0/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity explain AllOptions" annotations="//@annotations.1">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.1"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.1">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.1">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.1/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity profile AllOptions" annotations="//@annotations.2">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.1"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.2">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.2">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.2/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity optional Match" annotations="//@annotations.3">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.3"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.3">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.3">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.3/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity name VariableDeclaration" annotations="//@annotations.4">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.7"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.4">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.4">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.4/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity key MapLiteralEntry" annotations="//@annotations.5">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.9"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.5">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.5">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.5/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity value StringLiteral" annotations="//@annotations.6">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.10"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.6">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.6">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.6/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity return Return" annotations="//@annotations.7">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.11"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.7">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.7">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.7/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity distinct Return" annotations="//@annotations.8">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.11"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:BoolTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.8">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.8">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.8/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <assertions name="upperMultiplicity all ReturnItems" annotations="//@annotations.9">
    <value xsi:type="language_1:Forall">
      <quantifiedVariables name="src">
        <range xsi:type="language_1:ComplexTypeReference" referred="//@types.13"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 1">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <quantifiedVariables name="trg 2">
        <range xsi:type="language_1:StringTypeReference"/>
      </quantifiedVariables>
      <expression xsi:type="language_1:Impl">
        <leftOperand xsi:type="language_1:And">
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.9">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.1"/>
          </operands>
          <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@relations.9">
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.0"/>
            <parameterSubstitutions xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.2"/>
          </operands>
        </leftOperand>
        <rightOperand xsi:type="language_1:Not">
          <operand xsi:type="language_1:Distinct">
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.1"/>
            <operands xsi:type="language_1:SymbolicValue" symbolicReference="//@assertions.9/@value/@quantifiedVariables.2"/>
          </operand>
        </rightOperand>
      </expression>
    </value>
  </assertions>
  <relations xsi:type="language_1:RelationDeclaration" name="variableRef reference VariableRef">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.15"/>
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.7"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="explain attribute AllOptions">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.1"/>
    <parameters xsi:type="language_1:BoolTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="profile attribute AllOptions">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.1"/>
    <parameters xsi:type="language_1:BoolTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="optional attribute Match">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.3"/>
    <parameters xsi:type="language_1:BoolTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="name attribute VariableDeclaration">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.7"/>
    <parameters xsi:type="language_1:StringTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="key attribute MapLiteralEntry">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.9"/>
    <parameters xsi:type="language_1:StringTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="value attribute StringLiteral">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.10"/>
    <parameters xsi:type="language_1:StringTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="return attribute Return">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.11"/>
    <parameters xsi:type="language_1:StringTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="distinct attribute Return">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.11"/>
    <parameters xsi:type="language_1:BoolTypeReference"/>
  </relations>
  <relations xsi:type="language_1:RelationDeclaration" name="all attribute ReturnItems">
    <parameters xsi:type="language_1:ComplexTypeReference" referred="//@types.13"/>
    <parameters xsi:type="language_1:StringTypeReference"/>
  </relations>
  <containmentHierarchies typesOrderedInHierarchy="//@types.21 //@types.25 //@types.22 //@types.18 //@types.12 //@types.17 //@types.20 //@types.26 //@types.8 //@types.27 //@types.9 //@types.7 //@types.6 //@types.16 //@types.5 //@types.24 //@types.19 //@types.2 //@types.28 //@types.23 //@types.29 //@types.15 //@types.0 //@types.10 //@types.3 //@types.13 //@types.1 //@types.11 //@types.4 //@types.14"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.0" relation="//@relations.0" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.1" relation="//@relations.1" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.2" relation="//@relations.2" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.3" relation="//@relations.3" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.4" relation="//@relations.4" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.5" relation="//@relations.5" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.6" relation="//@relations.6" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.7" relation="//@relations.7" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.8" relation="//@relations.8" upper="1"/>
  <annotations xsi:type="ecore2logicannotations:UpperMultiplicityAssertion" target="//@assertions.9" relation="//@relations.9" upper="1"/>
</language:LogicProblem>
