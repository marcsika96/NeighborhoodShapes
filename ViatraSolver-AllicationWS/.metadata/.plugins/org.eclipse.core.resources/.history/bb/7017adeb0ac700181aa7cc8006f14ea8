import epackage "http://www.slizaa.org/neo4j/opencypher/OpenCypher"

metamodel target  {
	Cypher,	AllOptions,AllOptions.explain,AllOptions.profile, SinglePartQuery, Match, Match.optional,
Pattern,
PatternElement,
NodePattern,
VariableDeclaration, VariableDeclaration.name,
MapLiteral,
MapLiteralEntry, MapLiteralEntry.key,
StringLiteral, StringLiteral.value,
Return, Return.return, Return.distinct,
ReturnBody,
ReturnItems, ReturnItems.all,
ReturnItem,
VariableRef, VariableRef.variableRef
	
}

generate {
	metamodel = target
	partial-model = { "platform:/resource/Generate/SinglePartQuery.xmi" }
	number = 5
	solver = ViatraSolver
	config = {
		log-level = normal
		
	}
	scope = { # node += 5..10, # string += {"A"}, # int += { 1,2 } }
	debug = "platform:/resource/Generate/debug"
	output = "platform:/resource/Generate/models"
}